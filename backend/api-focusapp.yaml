openapi: 3.0.3
info:
  title: API de FocusApp
  version: 1.0.0
  description: Documentación de la API de FocusApp, una comunidad para fotógrafos
    y amantes de la fotografía.
paths:
  /api/posts/:
    get:
      operationId: api_posts_list
      description: "Obtener publicación por ID. \nOtros filtros: Obtener todas las\
        \ publicaciones de un autor (usuario) o todas las publicaciones de una categoría."
      parameters:
      - in: query
        name: author
        schema:
          type: integer
        description: Filtrar por ID de autor (opcional)
      - in: query
        name: category
        schema:
          type: integer
        description: Filtrar por ID de categoría (opcional)
      - in: path
        name: pk
        schema:
          type: integer
        description: ID del post (opcional)
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Post no encontrado
          description: ''
    post:
      operationId: api_posts_create
      description: Crear una nueva publicación de imagen.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Error de validación
          description: ''
    put:
      operationId: api_posts_update
      description: Editar una publicación de imagen.
      parameters:
      - in: path
        name: pk
        schema:
          type: integer
        description: ID del post a actualizar
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: No puedes editar este post
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Post no encontrado
          description: ''
    patch:
      operationId: api_posts_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: api_posts_destroy
      description: Eliminar una publicación.
      parameters:
      - in: path
        name: pk
        schema:
          type: integer
        description: ID del post a eliminar
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Post eliminado correctamente
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: No puedes eliminar este post
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Post no encontrado
          description: ''
  /api/posts/{id}/:
    get:
      operationId: api_posts_list_2
      description: "Obtener publicación por ID. \nOtros filtros: Obtener todas las\
        \ publicaciones de un autor (usuario) o todas las publicaciones de una categoría."
      parameters:
      - in: query
        name: author
        schema:
          type: integer
        description: Filtrar por ID de autor (opcional)
      - in: query
        name: category
        schema:
          type: integer
        description: Filtrar por ID de categoría (opcional)
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: ID del post (opcional)
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Post no encontrado
          description: ''
    post:
      operationId: api_posts_create_2
      description: Crear una nueva publicación de imagen.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Error de validación
          description: ''
    put:
      operationId: api_posts_update_2
      description: Editar una publicación de imagen.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: ID del post a actualizar
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: No puedes editar este post
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Post no encontrado
          description: ''
    patch:
      operationId: api_posts_partial_update_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: api_posts_destroy_2
      description: Eliminar una publicación.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: ID del post a eliminar
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Post eliminado correctamente
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: No puedes eliminar este post
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Post no encontrado
          description: ''
  /api/posts/categories/:
    get:
      operationId: api_posts_categories_list
      description: Lista todas las categorías disponibles
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/logout/:
    post:
      operationId: api_users_logout_create
      description: Endpoint para cerrar sesión.
      tags:
      - api
      requestBody:
        content:
          refresh:
            schema:
              type: string
      security:
      - jwtAuth: []
      responses:
        '205':
          description: No response body
        '400':
          description: No response body
  /api/users/register/:
    post:
      operationId: api_users_register_create
      description: Registrar nuevo usuario.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        profile_picture_url:
          type: string
          nullable: true
          title: URL de foto de perfil
          description: Opcional. Se guarda la URL de la imagen.
          maxLength: 255
      required:
      - id
      - username
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nombre de la categoría
          maxLength: 100
        slug:
          type: string
          description: Un identificador único para usar en URLs
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
          title: Descripción
      required:
      - id
      - name
    PatchedPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/Author'
          readOnly: true
        image:
          type: string
          format: uri
          title: Fotografía
        title:
          type: string
          nullable: true
          title: Título
          maxLength: 200
        description:
          type: string
          nullable: true
          title: Descripción
        category:
          type: integer
          title: Categoría
        allows_ratings:
          type: boolean
          title: Permite calificaciones
          description: Indica si este post puede ser valorado por otros usuarios.
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
          title: Fecha de subida
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Fecha de actualización
    Post:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/Author'
          readOnly: true
        image:
          type: string
          format: uri
          title: Fotografía
        title:
          type: string
          nullable: true
          title: Título
          maxLength: 200
        description:
          type: string
          nullable: true
          title: Descripción
        category:
          type: integer
          title: Categoría
        allows_ratings:
          type: boolean
          title: Permite calificaciones
          description: Indica si este post puede ser valorado por otros usuarios.
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
          title: Fecha de subida
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Fecha de actualización
      required:
      - allows_ratings
      - author
      - category
      - id
      - image
      - updated_at
      - uploaded_at
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Dirección de correo electrónico
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        date_of_birth:
          type: string
          format: date
          title: Fecha de nacimiento
          description: 'Formato: DD-MM-AAAA. Obligatorio para verificar la edad.'
        profile_picture_url:
          type: string
          nullable: true
          title: URL de foto de perfil
          description: Opcional. Se guarda la URL de la imagen.
          maxLength: 255
        country:
          type: string
          title: País
          description: Obligatorio. País de residencia.
          maxLength: 100
        province:
          type: string
          title: Provincia
          description: Obligatorio. Provincia/Estado de residencia.
          maxLength: 100
      required:
      - country
      - date_of_birth
      - email
      - id
      - password
      - province
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
